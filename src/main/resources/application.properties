#=========================================================================
# 1.database 配置
#=========================================================================
spring.datasource.url=jdbc:mysql://localhost:3306/db?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=Mylife1586
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#=========================================================================
# 2.1 阿里巴巴 druid 连接池配置
#=========================================================================
#通常来说，只需要修改initialSize、minIdle、maxActive
spring.datasource.druid.initial-size=3
spring.datasource.druid.max-active=20
spring.datasource.druid.min-idle=3
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
#打开PSCache，并且指定每个连接上PSCache的大小
# 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false
spring.datasource.druid.pool-prepared-statements=false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#spring.datasource.druid.max-open-prepared-statements=和上面的等价
spring.datasource.druid.validation-query=SELECT 1
#spring.datasource.druid.validation-query-timeout=
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.test-while-idle=true
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
#spring.datasource.druid.max-evictable-idle-time-millis=
#配置多个英文逗号分隔
spring.datasource.druid.filters= stat

#=========================================================================
# 2.2 阿里巴巴 druid WebStatFilter配置
#=========================================================================
# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
#是否启用StatFilter默认值true
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
spring.datasource.druid.web-stat-filter.session-stat-enable=false
spring.datasource.druid.web-stat-filter.session-stat-max-count=1000
spring.datasource.druid.web-stat-filter.principal-session-name=admin
spring.datasource.druid.web-stat-filter.principal-cookie-name=admin
spring.datasource.druid.web-stat-filter.profile-enable=true

#=========================================================================
# 2.3 阿里巴巴 druid StatViewServlet配置
#=========================================================================
# StatViewServlet配置
#展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API
#是否启用StatViewServlet默认值true
spring.datasource.druid.stat-view-servlet.enabled=true
#根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：
#http://110.76.43.235:9000/druid/index.html
#http://110.76.43.235:8080/mini-web/druid/index.html
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
#允许清空统计数据
spring.datasource.druid.stat-view-servlet.reset-enable=false
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin
#StatViewSerlvet展示出来的监控信息比较敏感，是系统运行的内部情况，如果你需要做访问控制，可以配置allow和deny这两个参数
#deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。如果allow没有配置或者为空，则允许所有访问
#配置的格式
#<IP>
#或者<IP>/<SUB_NET_MASK_size>其中128.242.127.1/24
#24表示，前面24位是子网掩码，比对的时候，前面24位相同就匹配,不支持IPV6。
spring.datasource.druid.stat-view-servlet.allow=192.168.1.130
spring.datasource.druid.stat-view-servlet.deny=128.242.127.1/24,128.242.128.1

#=========================================================================
# 2.4 阿里巴巴 druid aop 配置
#=========================================================================
spring.datasource.druid.aop-patterns= # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔


#=========================================================================
# JPA hibernate 配置
#=========================================================================
#jpa hibernate 配置
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
spring.jpa.open-in-view=true














#HikariDataSource 或者 DruidDataSource 选择其中一个连接池类型
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#2.1.连接池 Hikari will use the above plus the following to setup connection pooling
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=HikariCP
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1





server.port=80
#server.servlet.context-path=/base
#server.servlet.session.timeout=30
#server.error.path
#server.address



#关闭默认模板引擎 开发过程中关闭 缓存
spring.thymeleaf.enabled=true
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.content-type=text/html


#配置文件传输
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=0
#spring.servlet.multipart.location=
#单个文件大小上限
spring.servlet.multipart.max-file-size=50MB
#总数据大小上限
spring.servlet.multipart.max-request-size=200MB
spring.servlet.multipart.resolve-lazily=false





# 打开tomcat访问日志
server.tomcat.accesslog.enabled=false
# 访问日志所在的目录
server.tomcat.accesslog.directory=logs
# 允许HTTP请求缓存到请求到队列的最大个数,默认为100个
server.tomcat.accept-count=100
# 最大连接数，如果一旦连接数到达，剩下的请求将会暂时保存到请求缓存队列里，也就是accept-count指定队列
server.tomcat.max-connections=1000
# 最大工作线程数
server.tomcat.max-threads=200
# 最小空闲线程数
server.tomcat.min-spare-threads=10
# HTTP POST 内容最大长度
#server.tomcat.max-http-post-size=20000


# banner.txt 字符集 控制台启动图像
spring.banner.charset=UTF-8
spring.banner.location=classpath:banner.txt
# 如果使用图片，图片的位置，有可以使用jpg/png
# 图片宽度，这里指转为字符的个数，越多越清楚
spring.banner.image.location=classpath:banner.png
spring.banner.image.width=150
spring.banner.image.height=20
spring.banner.image.margin=1